# https://circleci.com/docs/2.0/language-elixir/
version: 2
jobs:
  format:
    docker:
      - image: circleci/elixir:1.5.3
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Ensure bmf_client is formatted
          command: mix format --check-formatted --dry-run
          working_directory: lib/bmf_client
      - run:
          name: Ensure bmf_server is formatted
          command: mix format --check-formatted --dry-run
          working_directory: lib/bmf_server
  test:
    docker:
      - image: circleci/elixir:1.5.3
        environment:
          MIX_ENV: test
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Fetch bmf_client dependencies and test
          command: mix do deps.get, test
          working_directory: lib/bmf_client
      - run:
          name: Fetch bmf_server dependencies and test
          command: mix do deps.get, test
          working_directory: lib/bmf_server
  build:
    docker:
      - image: circleci/elixir:1.5.3
        environment:
          MIX_ENV: prod
    working_directory: ~/repo
    steps:
      - checkout
      - setup_remote_docker:
          version: 17.05.0-ce
      - run:
          name: Build Docker image
          working_directory: lib/bmf_client
          command: |
            TAG=$CIRCLE_BRANCH
            docker build -t bmf/client:$TAG .
            mkdir -p /tmp/docker-cache
            docker save -o /tmp/docker-cache/built-image.tar bmf/client:$TAG
      - save_cache:
          key: v1-bmf_client-docker-cache-{{ .BuildNum }}
          paths:
            - /tmp/docker-cache
  deploy:
    docker:
      - image: circleci/elixir:1.5.3
        environment:
          MIX_ENV: prod
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          key: v1-bmf_client-docker-cache-{{ .BuildNum }}
      - setup_remote_docker:
          version: 17.05.0-ce
      - run:
          name: Tag and push Docker image
          working_directory: lib/bmf_client
          command: |
            TAG=$CIRCLE_BRANCH
            TARGET_IMAGE=$ECR_REPOSITORY:$TAG
            docker load < /tmp/docker-cache/built-image.tar
            TARGET_IMAGE=$AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/bmf/client:TAG
            docker tag bmf/client:$TAG $TARGET_IMAGE
            docker push $TARGET_IMAGE
workflows:
  version: 2
  all:
    jobs:
      - format
      - test
      - build
      - deploy:
          requires:
            - format
            - test
            - build
          filters:
            branches:
              only: master
